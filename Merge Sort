import java.util.Scanner;

public class runner {
	public static int[] takeInput() {
		Scanner s = new Scanner(System.in);
		int size = s.nextInt();
		int arr[] = new int[size];
		for (int i = 0; i < size; i++) {
			arr[i] = s.nextInt();
		}
		return arr;
	}
	
	public static void printArray(int input[]) {
		for(int i = 0; i < input.length; i++) {
			System.out.print(input[i] + " ");
		}
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		solution.mergeSort(input);
		printArray(input);
	}
}

public class solution {

	public static void mergeSort(int[] input){
		if(input.length <= 1){
            return;
        }
        int mid = input.length / 2;
        int part1[] = new int[mid];
        int part2[] = new int[input.length - mid];
        int i=0;
        while(i<mid){
            part1[i] = input[i];
            i++;
        }
        int k=0, j=0;;
        while(i< input.length){
            part2[k] = input[i];
            k++;
            i++;
        }
        mergeSort(part1);
        mergeSort(part2);
        merge(part1, part2, input);
	}
    
    public static void merge(int[] part1, int[] part2, int[] output){
        int i=0, j=0, k=0;
        while(i < part1.length && j < part2.length){
            if(part1[i] < part2[j]){
                output[k] = part1[i];
                k++;
                i++;
            }else{
                    output[k] = part2[j];
                    j++;
                    k++;
            }
        }
        while(i < part1.length){
            output[k] = part1[i];
            k++;
            i++;
        }
        while(j <part2.length){
            output[k] = part2[j];
            j++;
            k++;
        }
    }
}
